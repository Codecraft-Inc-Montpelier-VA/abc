/*
 * DO NOT EDIT THIS FILE!
 * THIS FILE IS AUTOMATICALLY GENERATED FROM A LITERATE PROGRAM SOURCE FILE.
 */
/*
 * This software is copyrighted (C) 2003 - 2021 by Codecraft, Inc.
 * The following terms apply to all files associated with the software unless
 * explicitly disclaimed in individual files.
 *
 * The authors hereby grant permission to use, copy, modify, distribute,
 * and license this software and its documentation for any purpose, provided
 * that existing copyright notices are retained in all copies and that this
 * notice is included verbatim in any distributions. No written agreement,
 * license, or royalty fee is required for any of the authorized uses.
 * Modifications to this software may be copyrighted by their authors and
 * need not follow the licensing terms described here, provided that the
 * new terms are clearly indicated on the first page of each file where
 * they apply.
 *
 * IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING
 * OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES
 * THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE
 * IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE
 * NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS,
 * OR MODIFICATIONS.
 *
 * GOVERNMENT USE: If you are acquiring this software on behalf of the
 * U.S. government, the Government shall have only "Restricted Rights"
 * in the software and related documentation as defined in the Federal
 * Acquisition Regulations (FARs) in Clause 52.227.19 (c) (2).  If you
 * are acquiring the software on behalf of the Department of Defense,
 * the software shall be classified as "Commercial Computer Software"
 * and the Government shall have only "Restricted Rights" as defined in
 * Clause 252.227-7013 (c) (1) of DFARs.  Notwithstanding the foregoing,
 * the authors grant the U.S. Government and others acting in its behalf
 * permission to use and distribute the software in accordance with the
 * terms specified in this license.
 */
/*
 *++
 * Project:
 *   +abc+ -- a simple test program for coroutines.  <by Cary WR Campbell>
 *
 * Module:
 *   +abc+ executable for macOS or Windows.
 *--
 */
/*
 * Include files
 */
#include "sccorlib.h"
#include <stdio.h>
/*
 * Definitions
 */
#define CR puts( "\r" ) 
/*
 * Variables
 */
volatile bool stop ;
/*
 * Forward References
 */
void strprt( const char *str_ptr ) ;
void counter( int count ) ;
void writeLetter( char c ) ;
/*
 * Main Routine
 */
int main( int argc, char* argv[] ) {
   unsigned long _RBX = 0xbbbbbbbbbbbbbbbb ;
   char temp[ 200 ] ;
   asm ( "movq %0, %%rbx" : /* no outputs */ : "rm" (_RBX) : "%rbx" ) ;
   stop = false ;
   sprintf( temp, "\n-> in main (before cobegin): ebx = %08lx.\n", _RBX ) ;
   strprt( temp ) ;
   CR ;
   cobegin( 3,                              // <1>
               writeLetter,     1, 'b',     // <2>
               writeLetter,     1, 'a',     // <3>
               counter,         1, 10       // <4>
          ) ;
   CR ;
   asm ( "movq %%rbx, %0" : "=rm" (_RBX) : /* no inputs */ ) ;
   sprintf( temp, "\n-> in main (after cobegin): ebx = %08lx.\n\n", _RBX ) ;
   strprt( temp ) ;
   return 0 ;
}
/*
 * Coroutines
 */
void writeLetter( char c ) {
   while ( stop == false ) {
      putchar( c ) ;
      coresume() ;
   }
}
void counter( int count ) {
   unsigned long _RBX = 0xb0b0b0b0b0b0b0b0 ;
   char temp[ 200 ] ;
   asm ( "movq %0, %%rbx" : /* no outputs */ : "rm" (_RBX) : "%rbx" ) ;

   asm ( "movq %%rbx, %0" : "=rm" (_RBX) : /* no inputs */ ) ;
   sprintf( temp, "-> in counter (after changing ebx value): ebx = %08lx.\n\n", _RBX ) ;
   strprt( temp ) ;
   for ( long i = 0; i < count; i++ ) {
      coresume() ;
   }
   stop = true ;
}
/*
 * Utility Routines
 */
void strprt( const char *str_ptr ) {
   while ( *str_ptr ) putchar( *str_ptr++ ) ;
}
